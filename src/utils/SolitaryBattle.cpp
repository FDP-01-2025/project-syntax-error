#include <iostream>
#include <cstdlib>
#include <ctime>
#include <conio.h>
#include "../include/pokemon.h"
#include "../include/SolitaryBattle.h"

using namespace std;

const int UP = 72, DOWN = 80, ENTER = 13;

int selectAttack(const Pokemon& p) {
    int opcion = 0;
    const char* nombres[] = {"Ataque r√°pido", "Ataque normal", "Ataque especial"};
    int danos[] = {p.fastattack, p.normalattack, p.specialattack};

    while (true) {
        system("cls");
        cout << "üî• ¬°Turno de " << p.name << "! üî•\n";
        cout << "Selecciona tu ataque:\n\n";

        for (int i = 0; i < 3; i++) {
            cout << (i == opcion ? "> " : "  ") << nombres[i] << " (" << danos[i] << " da√±o)\n";
        }

        int key = getch();
        if (key == 0 || key == 224) {
            key = getch();
            if (key == UP)
                opcion = (opcion + 2) % 3;
            else if (key == DOWN)
                opcion = (opcion + 1) % 3;
        } else if (key == ENTER) {
            system("cls");
            return opcion + 1;
        }
    }
}

void start1PMode(const Pokemon pokemonList[], int pokemonsCount, const Pokemon& jugadorFijo) {
    srand(time(0));
    int victoriasPlayer = 0, victoriasCPU = 0;

    for (int round = 1; round <= 3; round++) {
        system("cls");
        cout << "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n";
        cout << "‚îÇ Ronda " << round << " - ¬°Comienza la batalla! ‚îÇ\n";
        cout << "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n";

        int cpuIndex;
        do {
            cpuIndex = rand() % pokemonsCount;
        } while (pokemonList[cpuIndex].name == jugadorFijo.name);
        Pokemon cpu = pokemonList[cpuIndex];

        cout << "üí• La CPU env√≠a a " << cpu.name << " al campo de batalla. ¬°Prep√°rate!\n\n";
        system("pause");

        int hpPlayer = jugadorFijo.hp;
        int hpCPU = cpu.hp;

        while (hpPlayer > 0 && hpCPU > 0) {
            // Turno jugador
            int atk = selectAttack(jugadorFijo);
            int danioPlayer;
            string nombreAtaque;

            if (atk == 1) {
                danioPlayer = jugadorFijo.fastattack;
                nombreAtaque = "Ataque r√°pido";
            } else if (atk == 2) {
                danioPlayer = jugadorFijo.normalattack;
                nombreAtaque = "Ataque normal";
            } else {
                danioPlayer = jugadorFijo.specialattack;
                nombreAtaque = "Ataque especial";
            }

            system("cls");
            cout << "\nüóØÔ∏è  " << jugadorFijo.name << " usa " << nombreAtaque << " y causa " << danioPlayer << " de da√±o a " << cpu.name << "!\n";
            hpCPU -= danioPlayer;
            if (hpCPU < 0) hpCPU = 0;
            cout << "üí¢ " << cpu.name << " queda con " << hpCPU << " HP.\n";
            system("pause");

            if (hpCPU == 0) {
                system("cls");
                cout << "\nüéâ ¬°" << jugadorFijo.name << " ha vencido a " << cpu.name << " en esta round!\n\n";
                victoriasPlayer++;
                break;
            }

            // Turno CPU
            int atkCPU = 1 + rand() % 3;
            int danioCPU;
            string nombreAtaqueCPU;

            if (atkCPU == 1) {
                danioCPU = cpu.fastattack;
                nombreAtaqueCPU = "Ataque r√°pido";
            } else if (atkCPU == 2) {
                danioCPU = cpu.normalattack;
                nombreAtaqueCPU = "Ataque normal";
            } else {
                danioCPU = cpu.specialattack;
                nombreAtaqueCPU = "Ataque especial";
            }

            cout << "\n‚ö†Ô∏è  ¬°" << cpu.name << " contraataca con " << nombreAtaqueCPU << " causando " << danioCPU << " de da√±o!\n";
            hpPlayer -= danioCPU;
            if (hpPlayer < 0) hpPlayer = 0;
            cout << "üò¨ " << jugadorFijo.name << " queda con " << hpPlayer << " HP.\n";
            system("pause");

            if (hpPlayer == 0) {
                system("cls");
                cout << "\nüíÄ " << jugadorFijo.name << " ha ca√≠do... ¬°La CPU gana esta round!\n\n";
                victoriasCPU++;
                break;
            }
        }

        system("cls");
        cout << "\nüèÅ Marcador actual: Player = " << victoriasPlayer << " - CPU = " << victoriasCPU << "\n\n"; 
        system("pause");
    }

    system("cls");
    cout << "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n";
    cout << "‚îÇ ¬°Resultado final de la batalla! ‚îÇ\n";
    cout << "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n";

    if (victoriasPlayer > victoriasCPU)
        cout << "‚ú® ¬°Felicidades, entrenador! ¬°Has ganado la batalla solitaria! ‚ú®\n";
    else if (victoriasCPU > victoriasPlayer)
        cout << "üëæ La CPU se lleva la victoria. ¬°Sigue entrenando!\n";
    else
        cout << "ü§ù ¬°Ha sido un empate digno de campeones!\n";
}

